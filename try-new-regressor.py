import numpy as np
from keras.models import Sequential
from keras.layers.core import Dense

training_data = np.array([[384978,26436,1301,4682,5116,2787,1523,734], [121553,37611,7000,7125,11140,5017,1400,685], [1016925,135782,23768,38452,59085,56277,32531,30885], [1720729,46343,4617,4959,3598,2742,1962,636],[562171,312397,31614,12525,46615,8906,6882,3549],[799409,72015,50738,6407,13471,22595,5315,2884],[634880,11000,12105,2956,1923,8738,614,990],[395839,159018,34110,10494,59556,13431,3056,1878],[1248194,15024,3165,5032,4970,6565,1748,464],[998775,32011,7830,1451,11335,5330,1119,1438]], "float32")

target_data = np.array([[43], [48], [56], [78],[78],[66],[77],[91],[70],[100]], "float32")

model = Sequential()
model.add(Dense(16, input_dim=8, activation='relu'))
model.add(Dense(1, activation='sigmoid'))

model.compile(loss='mean_squared_error',
              optimizer='adam',
              metrics=['binary_accuracy'])

model.fit(training_data, target_data, nb_epoch=500, verbose=2)

test_data = np.array([[1520794,338225,30733,46475,20327,13482,5108,4700], [708956,134584,51593,21778,25406,10948,14491,1919], [1515170,80400,23470,15159,6932,13262,3149,5754], [710732,317012,109953,53437,39097,17269,3556,1656]], "float32")

print(model.predict(test_data))


# #############